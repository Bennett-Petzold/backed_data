[package]
name = "backed_data"
version = "0.2.0"
authors = ["Bennett Petzold <dansecob.dev@gmail.com>"]
edition = "2021"
rust-version = "1.80"
description = "Wrappers for backing data on disk"
repository = "https://github.com/Bennett-Petzold/backed_data"
license = "MPL-2.0"
keywords = ["disk", "backed", "array"]
# Applicability to these tags is dubious
#categories = ["caching", "memory-management"]
exclude = ["benches", "zstd", "shakespeare-dataset", ".git*"]

resolver = "2"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["bincode", "directory", "zstd"]
array = ["dep:stable_deref_trait"]
unsafe_array = ["array"] # Array methods using unsafe code
directory = ["array", "dep:uuid"]
async = ["dep:futures", "dep:async-scoped", "dep:cfg-if", "tokio"]
tokio = ["async", "dep:tokio", "dep:tokio-util"]
smol = ["async", "dep:smol"]

# START FORMATS
all_formats = ["bincode", "serde_json", "simd_json", "csv", "async_bincode", "async_csv"]

bincode = ["dep:bincode"]
serde_json = ["dep:serde_json"]
simd_json = ["dep:simd-json"]
csv = ["dep:csv"]

async_bincode = ["async", "dep:async-bincode", "dep:bincode"]
async_csv = ["async", "dep:csv-async"]

# END FORMATS

# START DISKS
all_disks = ["mmap", "zstd", "async_zstd", "encrypted"]

encrypted = ["dep:secrets", "dep:aes-gcm", "dep:stable_deref_trait"]
mmap = ["dep:memmap2", "dep:stable_deref_trait"]
network = ["async", "dep:reqwest", "dep:bytes", "dep:http-serde", "dep:url"]

# zstd features
zstd = ["array", "dep:zstd", "dep:num-traits"]
zstdmt = ["zstd", "zstd/zstdmt"]
async_zstd = ["async", "dep:num-traits", "dep:async-compression", "async-compression/zstd"]
async_zstdmt = ["async_zstd", "async-compression/zstdmt"]

# END DISKS

test = [] # For doctests to access test utils

[dependencies]
# Core dependencies
either = "1"
serde = { version = "1", features = ["derive", "rc"] }
derive-getters = "0.3"
error-stack = "0.5"
cfg-if = { version = "1", optional = true }
nix = "0.29"
thiserror = "1"

# Zstd dependencies
zstd = { version = "0.13", optional = true }
num-traits = { version = "0.2", optional = true }

# Format dependencies
bincode = { version = "1", optional = true }
serde_json = { version = "1", optional = true }
simd-json = { version = "0.13", optional = true }
csv = { version = "1", optional = true }

# Disk dependencies
memmap2 = { version = "0.9", optional = true }
secrets = { git = "https://github.com/Bennett-Petzold/secrets", optional = true, features = ["use-libsodium-sys"] }
aes-gcm = { version = "0.10", optional = true }
stable_deref_trait = { version = "1", optional = true }
reqwest = { version = "0.12", optional = true }
url = { version = "2", optional = true, features = ["serde"] }
bytes = { version = "*", optional = true } # Synced with reqwest

# Async dependencies
async-compression = { version = "0.4", optional = true, features = ["futures-io"] }
futures =  { version = "0.3", optional = true }
async-scoped = { version = "0.9", optional = true, features = ["use-tokio"] }

# Async executors
tokio = { version = "1", optional = true, default-features = false, features = ["fs"] }
tokio-util = { version = "0.7", optional = true, features = ["compat"] }
smol = { version = "2", optional = true }

# Async format dependencies
async-bincode = { version = "0.7", optional = true, default-features = false, features = ["futures"] }
csv-async = { version = "1", optional = true, features = ["with_serde"] }

# Directory dependencies
uuid = { version = "1", features = ["v4"], optional = true }
http-serde = { version = "2", optional = true }

# Linux OS call dependency, used for mmap
[target.'cfg(target_os = "linux")'.dependencies]
nix = { version = '*', features = ["fs"] }

[build-dependencies]
cfg_aliases = "0.2" # Reducing cfg boilerplate

[dev-dependencies]
# Multithread test runtime
tokio = { version = "1", features = ["rt", "rt-multi-thread", "io-util", "fs", "macros"] }

# Benchmarking
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }
fs_extra = "1"

# General utilities
chrono = "0.4"
seq-macro = "0.3"
uuid = { version = "1", features = ["v4"] }

# For examples
humansize = "2"
async_zip = { version = "0.0.17", features = ["deflate"] }
tokio-stream = "0.1"
get-size = { version = "0.1", features = ["derive"] }
indicatif = "0.17"
reqwest = "0.12"

# Benchmarking utility, only on non-Windows.
[target.'cfg(not(target_os = "windows"))'.dev-dependencies]
pprof = { version = "0.13", features = ["criterion", "flamegraph"] }

[[bench]]
name = "io_bench"
harness = false
required-features = ["bincode", "directory", "unsafe_array"]

[[bench]]
name = "zstd_bench"
harness = false
required-features = ["bincode", "directory", "zstd", "unsafe_array"]

[[example]]
name = "remote_loading"
path = "examples/remote_loading.rs"
required-features = ["async_csv", "network"]

[[example]]
name = "large_reencode"
path = "examples/large_reencode.rs"
required-features = ["async_zstd", "async_bincode", "csv"]

[[example]]
name = "shakespeare_secret"
path = "examples/shakespeare_secret.rs"
required-features = ["bincode", "encrypted"]

[[example]]
name = "mmap"
path = "examples/mmap.rs"
required-features = ["mmap"]

[[example]]
name = "async_mmap"
path = "examples/async_mmap.rs"
required-features = ["mmap", "async"]

[[example]]
name = "async_simd"
path = "examples/async_simd.rs"
required-features = ["simd_json", "async"]

[[example]]
name = "remote_simd"
path = "examples/remote_simd.rs"
required-features = ["simd_json", "async", "network"]

[profile.bench]
debug = true

# Profile to use for squeezing max performance
[profile.full-perf]
inherits = "release"
strip = true # Remove symbol data from a release
lto = true # Use full lto instead of thin. Combine with "zstd/fat-lto"
overflow-checks = false
panic = "abort"
codegen-units = 1 # Reduce processing speed, but squeeze optimization
