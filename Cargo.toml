[package]
name = "backed_data"
version = "0.2.0"
authors = ["Bennett Petzold <dansecob.dev@gmail.com>"]
edition = "2021"
rust-version = "1.80"
description = "Wrappers for backing data on disk"
repository = "https://github.com/Bennett-Petzold/backed_data"
license = "MPL-2.0"
keywords = ["disk", "backed", "array"]
# Applicability to these tags is dubious
#categories = ["caching", "memory-management"]
exclude = ["benches", "zstd", "shakespeare-dataset", ".git*"]

resolver = "2"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["bincode", "directory", "zstd"]
array = ["dep:stable_deref_trait"]
unsafe_array = ["array"] # Array methods using unsafe code
directory = ["array", "dep:uuid"]
async = ["dep:tokio", "dep:tokio-util", "dep:futures", "dep:async-scoped"]

# START FORMATS
all_formats = ["bincode", "serde_json", "simd_json", "csv", "async_bincode", "async_csv"]

bincode = ["dep:bincode"]
serde_json = ["dep:serde_json"]
simd_json = ["dep:simd-json"]
csv = ["dep:csv"]

async_bincode = ["async", "dep:async-bincode", "dep:bincode"]
async_csv = ["dep:csv-async", "tokio-util/compat"]

# END FORMATS

# START DISKS
all_disks = ["mmap", "zstd", "async_zstd", "encrypted"]

encrypted = ["dep:secrets", "dep:aes-gcm", "dep:stable_deref_trait"]
mmap = ["dep:mmap"]

# zstd features
zstd = ["array", "dep:zstd", "dep:num-traits"]
zstdmt = ["zstd", "zstd/zstdmt"]
async_zstd = ["async", "dep:num-traits", "dep:async-compression", "async-compression/zstd"]
async_zstdmt = ["async_zstd", "async-compression/zstdmt"]

# END DISKS

test = [] # For doctests to access test utils

[dependencies]
# Core dependencies
either = "1.13.0"
serde = { version = "1.0.197", features = ["derive"] }
derive-getters = "0.3.0"
error-stack = "0.5.0"

# Zstd dependencies
zstd = { version = "0.13.1", optional = true }
num-traits = { version = "0.2.19", optional = true }

# Format dependencies
bincode = { version = "1.3.3", optional = true }
serde_json = { version = "1.0.120", optional = true }
simd-json = { version = "0.13.10", optional = true }
csv = { version = "1.3.0", optional = true }

# Disk dependencies
mmap = { version = "0.1.1", optional = true }
secrets = { git = "https://github.com/Bennett-Petzold/secrets", optional = true }
aes-gcm = { version = "0.10.3", optional = true }
stable_deref_trait = { version = "1.2.0", optional = true }

# Async dependencies
async-compression = { version = "0.4.8", optional = true, features = ["tokio"] }
tokio = { version = "1.37.0", optional = true, features = ["rt", "io-util", "fs"] }
tokio-util = { version = "0.7.10", optional = true, features = ["io", "io-util"] }
futures =  { version = "0.3.30", optional = true }
async-scoped = { version = "0.9.0", optional = true, features = ["use-tokio"] }

# Async format dependencies
async-bincode = { version = "0.7.2", optional = true }
csv-async = { version = "1.3.0", optional = true, features = ["with_serde"] }

# Directory dependencies
uuid = { version = "1.8.0", features = ["v4"], optional = true }

[dev-dependencies]
# Multithread test runtime
tokio = { version = "1.37.0", features = ["rt-multi-thread", "io-util", "fs", "macros"] }
# Benchmarking
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }
pprof = { version = "0.13.0", features = ["criterion", "flamegraph"] }
fs_extra = "1.3.0"

# General utilities
itertools = "0.13.0"
humansize = "2.1.3"
chrono = "0.4.37"
seq-macro = "0.3.5"

# Test/example setup
reqwest = "0.12.5"

[[bench]]
name = "io_bench"
harness = false
required-features = ["bincode", "directory", "unsafe_array"]

[[bench]]
name = "zstd_bench"
harness = false
required-features = ["bincode", "directory", "zstd", "unsafe_array"]

[profile.bench]
debug = true

# Profile to use for squeezing max performance
[profile.full-perf]
inherits = "release"
strip = true # Remove symbol data from a release
lto = true # Use full lto instead of thin. Combine with "zstd/fat-lto"
overflow-checks = false
panic = "abort"
codegen-units = 1 # Reduce processing speed, but squeeze optimization
