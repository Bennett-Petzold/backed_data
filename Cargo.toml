[package]
name = "backed_data"
version = "0.2.0"
edition = "2021"
resolver = "2"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["bincode", "directory", "zstd"]
array = []
directory = ["array", "dep:uuid"]
async = ["dep:tokio", "dep:tokio-util", "dep:futures", "dep:async-scoped"]

# START FORMATS
all_formats = ["bincode", "serde_json", "simd_json", "encrypted", "async_bincode"]

bincode = ["dep:bincode"]
serde_json = ["dep:serde_json"]
simd_json = ["dep:simd-json"]
encrypted = ["dep:secrets", "dep:pgp"]

async_bincode = ["async", "dep:async-bincode", "dep:bincode"]

# END FORMATS

# START DISKS
all_disks = ["mmap", "zstd", "async_zstd"]

mmap = ["dep:mmap"]

# zstd features
zstd = ["array", "dep:zstd", "dep:num-traits"]
zstd_thin_lto = ["zstd", "zstd/thin-lto"]
zstd_fat_lto = ["zstd", "zstd/fat-lto"]
zstdmt = ["zstd", "zstd/zstdmt", "dep:lazy_static"]
async_zstd = ["async", "dep:num-traits", "dep:async-compression", "async-compression/zstd"]
async_zstdmt = ["async_zstd", "async-compression/zstdmt", "dep:lazy_static"]

# END DISKS

test = [] # For doctests to access test utils

[dependencies]
# Core dependencies
itertools = "0.12.1"
serde = { version = "1.0.197", features = ["derive"] }
derive-getters = "0.3.0"
anyhow = "1.0.81"
uuid = { version = "1.8.0", features = ["v4"], optional = true }

# Zstd dependencies
zstd = { version = "0.13.1", optional = true }
num-traits = { version = "0.2.19", optional = true }
lazy_static = { version = "1.4.0", optional = true }

# Format dependencies
bincode = { version = "1.3.3", optional = true }
serde_json = { version = "1.0.120", optional = true }
simd-json = { version = "0.13.10", optional = true }
secrets = { git = "https://github.com/Bennett-Petzold/secrets", optional = true }
pgp = { version = "0.13.0", optional = true }
mmap = { version = "0.1.1", optional = true }

# Async dependencies
async-compression = { version = "0.4.8", optional = true, features = ["tokio"] }
tokio = { version = "1.37.0", optional = true, features = ["rt", "io-util", "fs"] }
tokio-util = { version = "0.7.10", optional = true, features = ["io", "io-util"] }
futures =  { version = "0.3.30", optional = true }
async-scoped = { version = "0.9.0", optional = true, features = ["use-tokio"] }

# Async format dependencies
async-bincode = { version = "0.7.2", optional = true }

[dev-dependencies]
# Multithread test runtime
tokio = { version = "1.37.0", features = ["rt-multi-thread", "io-util", "fs", "macros"] }
# Benchmarking
criterion = { version = "0.4", features = ["html_reports", "async_tokio"] }
fs_extra = "1.3.0"

# General utilities
humansize = "2.1.3"
chrono = "0.4.37"

[[bench]]
name = "io_bench"
harness = false

# Profile to use for squeezing max performance
[profile.full-perf]
inherits = "release"
strip = true # Remove symbol data from a release
lto = true # Use full lto instead of thin. Combine with "zstd-fat-lto" feature
overflow-checks = false
panic = "abort"
codegen-units = 1 # Reduce processing speed, but squeeze optimization
