searchState.loadedDescShard("async_bincode", 0, "Asynchronous access to a bincode-encoded item stream.\nA marker that indicates that the wrapping type is …\nA marker that indicates that the wrapping type is …\nAsynchronous access to a bincode-encoded item stream using …\nA wrapper around an asynchronous reader that produces an …\nA wrapper around an asynchronous stream that receives and …\nA wrapper around an asynchronous sink that accepts, …\nA marker that indicates that the wrapping type is …\nA marker that indicates that the wrapping type is …\nReturns a reference to the internally buffered data.\nMake this writer include the serialized data’s size …\nMake this stream include the serialized data’s size …\nMake this writer only send bincode-encoded values.\nMake this stream only send bincode-encoded values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a mutable reference to the underlying reader.\nGets a mutable reference to the underlying writer.\nGets a mutable reference to the underlying stream.\nGets a reference to the underlying reader.\nGets a reference to the underlying writer.\nGets a reference to the underlying stream.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnwraps this <code>AsyncBincodeReader</code>, returning the underlying …\nUnwraps this <code>AsyncBincodeWriter</code>, returning the underlying …\nUnwraps this <code>AsyncBincodeStream</code>, returning the underlying …")