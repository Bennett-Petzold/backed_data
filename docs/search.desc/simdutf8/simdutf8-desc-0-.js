searchState.loadedDescShard("simdutf8", 0, "Blazingly fast API-compatible UTF-8 validation for Rust …\nThe <code>basic</code> API flavor provides barebones UTF-8 checking at …\nThe <code>compat</code> API flavor provides full compatibility with …\nSimple zero-sized UTF-8 error.\nReturns the argument unchanged.\nAnalogue to <code>std::str::from_utf8()</code>.\nAnalogue to <code>std::str::from_utf8_mut()</code>.\nAllows direct access to the platform-specific unsafe …\nCalls <code>U::from(self)</code>.\nLike <code>Utf8Validator</code> this low-level API is for streaming …\nA low-level interfacne for streaming validation of UTF-8 …\nFinishes the validation and returns <code>Ok(())</code> if the input …\nUpdates the validator with remaining input if any. There …\nCreates a new validator.\nCreates a new validator.\nUpdates the validator with <code>input</code>.\nUpdates the validator with <code>input</code>.\nIncludes the x86/x86-64 SIMD implementations.\nIncludes the validation implementation for AVX …\nIncludes the validation implementation for SSE …\nLow-level implementation of the …\nLow-level implementation of the <code>basic::imp::Utf8Validator</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidation implementation for CPUs supporting the SIMD …\nLow-level implementation of the …\nLow-level implementation of the <code>basic::imp::Utf8Validator</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidation implementation for CPUs supporting the SIMD …\nUTF-8 error information compatible with <code>std::str::Utf8Error</code>…\nAnalogue to <code>std::str::Utf8Error::error_len()</code>.\nReturns the argument unchanged.\nAnalogue to <code>std::str::from_utf8_mut()</code>.\nAnalogue to <code>std::str::from_utf8_mut()</code>.\nAllows direct access to the platform-specific unsafe …\nCalls <code>U::from(self)</code>.\nAnalogue to <code>std::str::Utf8Error::valid_up_to()</code>.\nIncludes the x86/x86-64 SIMD implementations.\nIncludes the validation implementation for AVX …\nIncludes the validation implementation for SSE …\nValidation implementation for CPUs supporting the SIMD …\nValidation implementation for CPUs supporting the SIMD …")