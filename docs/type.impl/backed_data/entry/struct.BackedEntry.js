(function() {
    var type_impls = Object.fromEntries([["backed_data",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CBackedEntry%3CT,+Disk,+Coder%3E%3E-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#265-269\">source</a><a href=\"#impl-AsMut%3CBackedEntry%3CT,+Disk,+Coder%3E%3E-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Disk, Coder&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;&gt; for <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#266-268\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<BackedEntry<T, Disk, Coder>>","backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CBackedEntry%3CT,+Disk,+Coder%3E%3E-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#259-263\">source</a><a href=\"#impl-AsRef%3CBackedEntry%3CT,+Disk,+Coder%3E%3E-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Disk, Coder&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;&gt; for <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#260-262\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<BackedEntry<T, Disk, Coder>>","backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#241-250\">source</a><a href=\"#impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"backed_data/utils/trait.Once.html\" title=\"trait backed_data::utils::Once\">Once</a>, Disk, Coder&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#243-249\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.new\" class=\"fn\">new</a>(disk: Disk, coder: Coder) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"backed_data/entry/struct.BackedEntry.html#method.with_disk\" title=\"associated function backed_data::entry::BackedEntry::with_disk\"><code>Self::with_disk</code></a> when <code>Coder</code> implements default.</p>\n</div></details></div></details>",0,"backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#252-257\">source</a><a href=\"#impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"backed_data/utils/trait.Once.html\" title=\"trait backed_data::utils::Once\">Once</a>, Disk, Coder: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_disk\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#254-256\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.with_disk\" class=\"fn\">with_disk</a>(disk: Disk) -&gt; Self</h4></section></summary><div class=\"docblock\"><p><a href=\"backed_data/entry/struct.BackedEntry.html#method.new\" title=\"associated function backed_data::entry::BackedEntry::new\"><code>Self::new</code></a>, but builds <code>Coder</code> from default.</p>\n</div></details></div></details>",0,"backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#77-85\">source</a><a href=\"#impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Disk, Coder&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.get_disk\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#78-80\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.get_disk\" class=\"fn\">get_disk</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Disk</a></h4></section><section id=\"method.get_disk_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#82-84\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.get_disk_mut\" class=\"fn\">get_disk_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Disk</a></h4></section></div></details>",0,"backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#20-46\">source</a><a href=\"#impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"backed_data/utils/trait.Once.html\" title=\"trait backed_data::utils::Once\">Once</a>&lt;Inner: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>&gt;, Disk: <a class=\"trait\" href=\"backed_data/entry/disks/trait.WriteDisk.html\" title=\"trait backed_data::entry::disks::WriteDisk\">WriteDisk</a>, Coder&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;<div class=\"where\">where\n    Coder: <a class=\"trait\" href=\"backed_data/entry/formats/trait.Encoder.html\" title=\"trait backed_data::entry::formats::Encoder\">Encoder</a>&lt;Disk::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.WriteDisk.html#associatedtype.WriteDisk\" title=\"type backed_data::entry::disks::WriteDisk::WriteDisk\">WriteDisk</a>, T = T::<a class=\"associatedtype\" href=\"backed_data/utils/trait.Once.html#associatedtype.Inner\" title=\"type backed_data::utils::Once::Inner\">Inner</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.update\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#25-31\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.update\" class=\"fn\">update</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Coder::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.Encoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::Encoder::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Updates underlying storage with the current entry</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#36-45\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, new_value: T::<a class=\"associatedtype\" href=\"backed_data/utils/trait.Once.html#associatedtype.Inner\" title=\"type backed_data::utils::Once::Inner\">Inner</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Coder::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.Encoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::Encoder::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Writes the new value to memory and disk.</p>\n<p>See <a href=\"backed_data/entry/struct.BackedEntry.html#method.write_unload\" title=\"method backed_data::entry::BackedEntry::write_unload\"><code>Self::write_unload</code></a> to skip the memory write.</p>\n</div></details></div></details>",0,"backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#239-251\">source</a><a href=\"#impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"backed_data/utils/trait.Once.html\" title=\"trait backed_data::utils::Once\">Once</a>&lt;Inner: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + for&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;&gt;, Disk: <a class=\"trait\" href=\"backed_data/entry/disks/trait.WriteDisk.html\" title=\"trait backed_data::entry::disks::WriteDisk\">WriteDisk</a> + <a class=\"trait\" href=\"backed_data/entry/disks/trait.ReadDisk.html\" title=\"trait backed_data::entry::disks::ReadDisk\">ReadDisk</a>, Coder: <a class=\"trait\" href=\"backed_data/entry/formats/trait.Encoder.html\" title=\"trait backed_data::entry::formats::Encoder\">Encoder</a>&lt;Disk::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.WriteDisk.html#associatedtype.WriteDisk\" title=\"type backed_data::entry::disks::WriteDisk::WriteDisk\">WriteDisk</a>, T = T::<a class=\"associatedtype\" href=\"backed_data/utils/trait.Once.html#associatedtype.Inner\" title=\"type backed_data::utils::Once::Inner\">Inner</a>&gt; + <a class=\"trait\" href=\"backed_data/entry/formats/trait.Decoder.html\" title=\"trait backed_data::entry::formats::Decoder\">Decoder</a>&lt;Disk::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.ReadDisk.html#associatedtype.ReadDisk\" title=\"type backed_data::entry::disks::ReadDisk::ReadDisk\">ReadDisk</a>, T = T::<a class=\"associatedtype\" href=\"backed_data/utils/trait.Once.html#associatedtype.Inner\" title=\"type backed_data::utils::Once::Inner\">Inner</a>&gt;&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_handle\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#246-250\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.mut_handle\" class=\"fn\">mut_handle</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"backed_data/entry/sync_impl/struct.BackedEntryMut.html\" title=\"struct backed_data::entry::sync_impl::BackedEntryMut\">BackedEntryMut</a>&lt;'_, Self&gt;, &lt;Coder as <a class=\"trait\" href=\"backed_data/entry/formats/trait.Decoder.html\" title=\"trait backed_data::entry::formats::Decoder\">Decoder</a>&lt;Disk::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.ReadDisk.html#associatedtype.ReadDisk\" title=\"type backed_data::entry::disks::ReadDisk::ReadDisk\">ReadDisk</a>&gt;&gt;::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.Decoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::Decoder::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convenience wrapper for <a href=\"backed_data/entry/sync_impl/struct.BackedEntryMut.html#method.mut_handle\" title=\"associated function backed_data::entry::sync_impl::BackedEntryMut::mut_handle\"><code>BackedEntryMut::mut_handle</code></a></p>\n</div></details></div></details>",0,"backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#253-313\">source</a><a href=\"#impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"backed_data/utils/trait.Once.html\" title=\"trait backed_data::utils::Once\">Once</a>&lt;Inner: for&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>&gt;, Disk: <a class=\"trait\" href=\"backed_data/entry/disks/trait.ReadDisk.html\" title=\"trait backed_data::entry::disks::ReadDisk\">ReadDisk</a>, Coder: <a class=\"trait\" href=\"backed_data/entry/formats/trait.Decoder.html\" title=\"trait backed_data::entry::formats::Decoder\">Decoder</a>&lt;Disk::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.ReadDisk.html#associatedtype.ReadDisk\" title=\"type backed_data::entry::disks::ReadDisk::ReadDisk\">ReadDisk</a>, T = T::<a class=\"associatedtype\" href=\"backed_data/utils/trait.Once.html#associatedtype.Inner\" title=\"type backed_data::utils::Once::Inner\">Inner</a>&gt;&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.change_backing\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#269-286\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.change_backing\" class=\"fn\">change_backing</a>&lt;OtherDisk, OtherCoder&gt;(\n    self,\n    disk: OtherDisk,\n    coder: OtherCoder,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, OtherDisk, OtherCoder&gt;, <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;Coder::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.Decoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::Decoder::Error\">Error</a>, OtherCoder::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.Encoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::Encoder::Error\">Error</a>&gt;&gt;<div class=\"where\">where\n    OtherDisk: <a class=\"trait\" href=\"backed_data/entry/disks/trait.WriteDisk.html\" title=\"trait backed_data::entry::disks::WriteDisk\">WriteDisk</a>,\n    OtherCoder: <a class=\"trait\" href=\"backed_data/entry/formats/trait.Encoder.html\" title=\"trait backed_data::entry::formats::Encoder\">Encoder</a>&lt;OtherDisk::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.WriteDisk.html#associatedtype.WriteDisk\" title=\"type backed_data::entry::disks::WriteDisk::WriteDisk\">WriteDisk</a>, T = T::<a class=\"associatedtype\" href=\"backed_data/utils/trait.Once.html#associatedtype.Inner\" title=\"type backed_data::utils::Once::Inner\">Inner</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"backed_data/entry/sync_impl/index.html\" title=\"mod backed_data::entry::sync_impl\"><code>self</code></a> to another disk and encoding representation.</p>\n<p>This loads the value from the original disk in the original format (if necessary),\nand then encodes the value to the target disk. The original disk is not deleted.\nThis may produce a disk read, and will always produce a disk write.</p>\n<p>If switching between compatible coders (e.g. simd_json -&gt; serde_json)\nwithout switching the backing disk, use <a href=\"backed_data/entry/struct.BackedEntry.html#method.encoder_into\" title=\"method backed_data::entry::BackedEntry::encoder_into\"><code>Self::encoder_into</code></a> to skip\nthe extraneous disk reads/writes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoder_into\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#289-298\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.encoder_into\" class=\"fn\">encoder_into</a>&lt;OtherCoder&gt;(self) -&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, OtherCoder&gt;<div class=\"where\">where\n    OtherCoder: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Coder&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Replaces <a href=\"backed_data/entry/sync_impl/index.html\" title=\"mod backed_data::entry::sync_impl\"><code>self</code></a>’s encoder without any disk operation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoder_try_into\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#301-312\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.encoder_try_into\" class=\"fn\">encoder_try_into</a>&lt;OtherCoder&gt;(\n    self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, OtherCoder&gt;, OtherCoder::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;<div class=\"where\">where\n    OtherCoder: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Coder&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Replaces <a href=\"backed_data/entry/sync_impl/index.html\" title=\"mod backed_data::entry::sync_impl\"><code>self</code></a>’s encoder without any disk operation.</p>\n</div></details></div></details>",0,"backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#48-78\">source</a><a href=\"#impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"backed_data/utils/trait.Once.html\" title=\"trait backed_data::utils::Once\">Once</a>&lt;Inner: for&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;&gt;, Disk: <a class=\"trait\" href=\"backed_data/entry/disks/trait.ReadDisk.html\" title=\"trait backed_data::entry::disks::ReadDisk\">ReadDisk</a>, Coder&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;<div class=\"where\">where\n    Coder: <a class=\"trait\" href=\"backed_data/entry/formats/trait.Decoder.html\" title=\"trait backed_data::entry::formats::Decoder\">Decoder</a>&lt;Disk::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.ReadDisk.html#associatedtype.ReadDisk\" title=\"type backed_data::entry::disks::ReadDisk::ReadDisk\">ReadDisk</a>, T = T::<a class=\"associatedtype\" href=\"backed_data/utils/trait.Once.html#associatedtype.Inner\" title=\"type backed_data::utils::Once::Inner\">Inner</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#55-65\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.load\" class=\"fn\">load</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;T::<a class=\"associatedtype\" href=\"backed_data/utils/trait.Once.html#associatedtype.Inner\" title=\"type backed_data::utils::Once::Inner\">Inner</a>, Coder::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.Decoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::Decoder::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the entry, loading from disk if not in memory.</p>\n<p>Will remain in memory until an explicit call to unload.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#68-77\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.take\" class=\"fn\">take</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T::<a class=\"associatedtype\" href=\"backed_data/utils/trait.Once.html#associatedtype.Inner\" title=\"type backed_data::utils::Once::Inner\">Inner</a>, Coder::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.Decoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::Decoder::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Takes the inner value, loading from disk if not in memory.</p>\n</div></details></div></details>",0,"backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#80-84\">source</a><a href=\"#impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"backed_data/utils/trait.Once.html\" title=\"trait backed_data::utils::Once\">Once</a>, Disk, Coder&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.is_loaded\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#81-83\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.is_loaded\" class=\"fn\">is_loaded</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></div></details>",0,"backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#86-90\">source</a><a href=\"#impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"backed_data/utils/trait.Once.html\" title=\"trait backed_data::utils::Once\">Once</a>, Disk, Coder&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.unload\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#87-89\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.unload\" class=\"fn\">unload</a>(&amp;mut self)</h4></section></div></details>",0,"backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#92-105\">source</a><a href=\"#impl-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"backed_data/utils/trait.Once.html\" title=\"trait backed_data::utils::Once\">Once</a>&lt;Inner: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>&gt;, Disk: <a class=\"trait\" href=\"backed_data/entry/disks/trait.WriteDisk.html\" title=\"trait backed_data::entry::disks::WriteDisk\">WriteDisk</a>, Coder&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;<div class=\"where\">where\n    Coder: <a class=\"trait\" href=\"backed_data/entry/formats/trait.Encoder.html\" title=\"trait backed_data::entry::formats::Encoder\">Encoder</a>&lt;Disk::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.WriteDisk.html#associatedtype.WriteDisk\" title=\"type backed_data::entry::disks::WriteDisk::WriteDisk\">WriteDisk</a>, T = T::<a class=\"associatedtype\" href=\"backed_data/utils/trait.Once.html#associatedtype.Inner\" title=\"type backed_data::utils::Once::Inner\">Inner</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_unload\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/entry/sync_impl.rs.html#99-104\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/entry/struct.BackedEntry.html#tymethod.write_unload\" class=\"fn\">write_unload</a>&lt;U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;T::<a class=\"associatedtype\" href=\"backed_data/utils/trait.Once.html#associatedtype.Inner\" title=\"type backed_data::utils::Once::Inner\">Inner</a>&gt;&gt;(\n    &amp;mut self,\n    new_value: U,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Coder::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.Encoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::Encoder::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Write the value to disk only, unloading current memory.</p>\n<p>See <a href=\"backed_data/entry/struct.BackedEntry.html#method.write\" title=\"method backed_data::entry::BackedEntry::write\"><code>Self::write</code></a> to keep the value in memory.</p>\n</div></details></div></details>",0,"backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntryContainer-for-BackedEntry%3CC,+D,+Enc%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/array/container/mod.rs.html#116-130\">source</a><a href=\"#impl-BackedEntryContainer-for-BackedEntry%3CC,+D,+Enc%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D, Enc&gt; <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainer.html\" title=\"trait backed_data::array::container::BackedEntryContainer\">BackedEntryContainer</a> for <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;C, D, Enc&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>array</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Container\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Container\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Container\" class=\"associatedtype\">Container</a> = C</h4></section><section id=\"associatedtype.Disk\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Disk\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Disk\" class=\"associatedtype\">Disk</a> = D</h4></section><section id=\"associatedtype.Coder\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Coder\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Coder\" class=\"associatedtype\">Coder</a> = Enc</h4></section><section id=\"method.get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/array/container/mod.rs.html#121-123\">source</a><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"backed_data/array/container/trait.BackedEntryContainer.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;Self::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Container\" title=\"type backed_data::array::container::BackedEntryContainer::Container\">Container</a>, Self::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainer::Disk\">Disk</a>, Self::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Coder\" title=\"type backed_data::array::container::BackedEntryContainer::Coder\">Coder</a>&gt;</h4></section><section id=\"method.get_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/array/container/mod.rs.html#124-126\">source</a><a href=\"#method.get_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"backed_data/array/container/trait.BackedEntryContainer.html#tymethod.get_ref\" class=\"fn\">get_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;Self::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Container\" title=\"type backed_data::array::container::BackedEntryContainer::Container\">Container</a>, Self::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainer::Disk\">Disk</a>, Self::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Coder\" title=\"type backed_data::array::container::BackedEntryContainer::Coder\">Coder</a>&gt;</h4></section><section id=\"method.get_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/array/container/mod.rs.html#127-129\">source</a><a href=\"#method.get_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"backed_data/array/container/trait.BackedEntryContainer.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(\n    &amp;mut self,\n) -&gt; &amp;mut <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;Self::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Container\" title=\"type backed_data::array::container::BackedEntryContainer::Container\">Container</a>, Self::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainer::Disk\">Disk</a>, Self::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainer.html#associatedtype.Coder\" title=\"type backed_data::array::container::BackedEntryContainer::Coder\">Coder</a>&gt;</h4></section></div></details>","BackedEntryContainer","backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackedEntryTrait-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#285-299\">source</a><a href=\"#impl-BackedEntryTrait-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Disk, Coder&gt; <a class=\"trait\" href=\"backed_data/entry/trait.BackedEntryTrait.html\" title=\"trait backed_data::entry::BackedEntryTrait\">BackedEntryTrait</a> for <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.T\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.T\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.T\" class=\"associatedtype\">T</a> = T</h4></section><section id=\"associatedtype.Disk\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Disk\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.Disk\" class=\"associatedtype\">Disk</a> = Disk</h4></section><section id=\"associatedtype.Coder\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Coder\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.Coder\" class=\"associatedtype\">Coder</a> = Coder</h4></section><section id=\"method.get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#290-292\">source</a><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"backed_data/entry/trait.BackedEntryTrait.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;Self::<a class=\"associatedtype\" href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.T\" title=\"type backed_data::entry::BackedEntryTrait::T\">T</a>, Self::<a class=\"associatedtype\" href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.Disk\" title=\"type backed_data::entry::BackedEntryTrait::Disk\">Disk</a>, Self::<a class=\"associatedtype\" href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.Coder\" title=\"type backed_data::entry::BackedEntryTrait::Coder\">Coder</a>&gt;</h4></section><section id=\"method.get_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#293-295\">source</a><a href=\"#method.get_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"backed_data/entry/trait.BackedEntryTrait.html#tymethod.get_ref\" class=\"fn\">get_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;Self::<a class=\"associatedtype\" href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.T\" title=\"type backed_data::entry::BackedEntryTrait::T\">T</a>, Self::<a class=\"associatedtype\" href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.Disk\" title=\"type backed_data::entry::BackedEntryTrait::Disk\">Disk</a>, Self::<a class=\"associatedtype\" href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.Coder\" title=\"type backed_data::entry::BackedEntryTrait::Coder\">Coder</a>&gt;</h4></section><section id=\"method.get_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#296-298\">source</a><a href=\"#method.get_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"backed_data/entry/trait.BackedEntryTrait.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;Self::<a class=\"associatedtype\" href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.T\" title=\"type backed_data::entry::BackedEntryTrait::T\">T</a>, Self::<a class=\"associatedtype\" href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.Disk\" title=\"type backed_data::entry::BackedEntryTrait::Disk\">Disk</a>, Self::<a class=\"associatedtype\" href=\"backed_data/entry/trait.BackedEntryTrait.html#associatedtype.Coder\" title=\"type backed_data::entry::BackedEntryTrait::Coder\">Coder</a>&gt;</h4></section></div></details>","BackedEntryTrait","backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#67-75\">source</a><a href=\"#impl-Clone-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Disk: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Coder: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#68-74\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#59\">source</a><a href=\"#impl-Debug-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, Disk: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, Coder: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#59\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#59\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, Disk, Coder&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;<div class=\"where\">where\n    Disk: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    Coder: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#59\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(__deserializer: __D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, __D::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#59\">source</a><a href=\"#impl-Serialize-for-BackedEntry%3CT,+Disk,+Coder%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Disk, Coder&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"backed_data/entry/struct.BackedEntry.html\" title=\"struct backed_data::entry::BackedEntry\">BackedEntry</a>&lt;T, Disk, Coder&gt;<div class=\"where\">where\n    Disk: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    Coder: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/entry/mod.rs.html#59\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","backed_data::entry::BackedEntryCell","backed_data::entry::BackedEntryLock","backed_data::entry::BackedEntryAsync"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[51373]}