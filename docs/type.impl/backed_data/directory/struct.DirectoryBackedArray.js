(function() {var type_impls = {
"backed_data":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/mod.rs.html#27\">source</a><a href=\"#impl-Debug-for-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/mod.rs.html#27\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#146-152\">source</a><a href=\"#impl-Deref-for-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"struct\" href=\"backed_data/array/struct.BackedArray.html\" title=\"struct backed_data::array::BackedArray\">BackedArray</a>&lt;K, E&gt;</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#149-151\">source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#154-158\">source</a><a href=\"#impl-DerefMut-for-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#155-157\">source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/mod.rs.html#27\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, K, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    E: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/mod.rs.html#27\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(__deserializer: __D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, __D::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#127-142\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.a_new\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#135-141\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_new\" class=\"fn\">a_new</a>(directory_root: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new directory at <code>directory_root</code>.</p>\n<ul>\n<li><code>directory_root</code>: Valid read/write directory on system</li>\n</ul>\n</div></details></div></details>",0,"backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#127-142\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.a_new\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#135-141\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_new\" class=\"fn\">a_new</a>(directory_root: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;Self&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong><code>runtime</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Creates a new directory at <code>directory_root</code>.</p>\n<ul>\n<li><code>directory_root</code>: Valid read/write directory on system</li>\n</ul>\n</div></details></div></details>",0,"backed_data::directory::StdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#144-170\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html\" title=\"trait backed_data::array::container::BackedEntryContainerNested\">BackedEntryContainerNested</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.a_move_root\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#150-169\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_move_root\" class=\"fn\">a_move_root</a>(&amp;mut self, new_root: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;&amp;mut Self&gt;</h4></section></summary><div class=\"docblock\"><p>Moves the directory to a new location wholesale.</p>\n</div></details></div></details>",0,"backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#144-170\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html\" title=\"trait backed_data::array::container::BackedEntryContainerNested\">BackedEntryContainerNested</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.a_move_root\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#150-169\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_move_root\" class=\"fn\">a_move_root</a>(&amp;mut self, new_root: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;&amp;mut Self&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong><code>runtime</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Moves the directory to a new location wholesale.</p>\n</div></details></div></details>",0,"backed_data::directory::StdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#172-180\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html\" title=\"trait backed_data::array::async_impl::BackedEntryContainerNestedAsync\">BackedEntryContainerNestedAsync</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.a_next_target\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#177-179\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_next_target\" class=\"fn\">a_next_target</a>(&amp;self) -&gt; E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a></h4></section></div></details>",0,"backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#172-180\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html\" title=\"trait backed_data::array::async_impl::BackedEntryContainerNestedAsync\">BackedEntryContainerNestedAsync</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.a_next_target\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#177-179\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_next_target\" class=\"fn\">a_next_target</a>(&amp;self) -&gt; E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong><code>runtime</code></strong> only.</div></span></div></details>",0,"backed_data::directory::StdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#182-204\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncWrite.html\" title=\"trait backed_data::array::async_impl::BackedEntryContainerNestedAsyncWrite\">BackedEntryContainerNestedAsyncWrite</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.a_save\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#189-203\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_save\" class=\"fn\">a_save</a>&lt;C&gt;(&amp;self, coder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, C::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.AsyncEncoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::AsyncEncoder::Error\">Error</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"backed_data/entry/formats/trait.AsyncEncoder.html\" title=\"trait backed_data::entry::formats::AsyncEncoder\">AsyncEncoder</a>&lt;&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a> as <a class=\"trait\" href=\"backed_data/entry/disks/trait.AsyncWriteDisk.html\" title=\"trait backed_data::entry::disks::AsyncWriteDisk\">AsyncWriteDisk</a>&gt;::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.AsyncWriteDisk.html#associatedtype.WriteDisk\" title=\"type backed_data::entry::disks::AsyncWriteDisk::WriteDisk\">WriteDisk</a>, Error: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;, T = Self&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Async version of <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#method.save\" title=\"method backed_data::directory::DirectoryBackedArray::save\"><code>Self::save</code></a>.</p>\n</div></details></div></details>",0,"backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#182-204\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncWrite.html\" title=\"trait backed_data::array::async_impl::BackedEntryContainerNestedAsyncWrite\">BackedEntryContainerNestedAsyncWrite</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.a_save\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#189-203\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_save\" class=\"fn\">a_save</a>&lt;C&gt;(&amp;self, coder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, C::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.AsyncEncoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::AsyncEncoder::Error\">Error</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"backed_data/entry/formats/trait.AsyncEncoder.html\" title=\"trait backed_data::entry::formats::AsyncEncoder\">AsyncEncoder</a>&lt;&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a> as <a class=\"trait\" href=\"backed_data/entry/disks/trait.AsyncWriteDisk.html\" title=\"trait backed_data::entry::disks::AsyncWriteDisk\">AsyncWriteDisk</a>&gt;::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.AsyncWriteDisk.html#associatedtype.WriteDisk\" title=\"type backed_data::entry::disks::AsyncWriteDisk::WriteDisk\">WriteDisk</a>, Error: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;, T = Self&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong><code>runtime</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Async version of <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#method.save\" title=\"method backed_data::directory::DirectoryBackedArray::save\"><code>Self::save</code></a>.</p>\n</div></details></div></details>",0,"backed_data::directory::StdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#206-225\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + for&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + for&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; + <a class=\"trait\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncRead.html\" title=\"trait backed_data::array::async_impl::BackedEntryContainerNestedAsyncRead\">BackedEntryContainerNestedAsyncRead</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.a_load\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#213-224\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_load\" class=\"fn\">a_load</a>&lt;P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;, C&gt;(\n    root: P,\n    coder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, C::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.AsyncDecoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::AsyncDecoder::Error\">Error</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"backed_data/entry/formats/trait.AsyncDecoder.html\" title=\"trait backed_data::entry::formats::AsyncDecoder\">AsyncDecoder</a>&lt;&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a> as <a class=\"trait\" href=\"backed_data/entry/disks/trait.AsyncReadDisk.html\" title=\"trait backed_data::entry::disks::AsyncReadDisk\">AsyncReadDisk</a>&gt;::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.AsyncReadDisk.html#associatedtype.ReadDisk\" title=\"type backed_data::entry::disks::AsyncReadDisk::ReadDisk\">ReadDisk</a>, Error: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;, T = Self&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Async version of <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#method.load\" title=\"associated function backed_data::directory::DirectoryBackedArray::load\"><code>Self::load</code></a>.</p>\n</div></details></div></details>",0,"backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#206-225\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + for&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + for&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; + <a class=\"trait\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncRead.html\" title=\"trait backed_data::array::async_impl::BackedEntryContainerNestedAsyncRead\">BackedEntryContainerNestedAsyncRead</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.a_load\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#213-224\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_load\" class=\"fn\">a_load</a>&lt;P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;, C&gt;(\n    root: P,\n    coder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, C::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.AsyncDecoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::AsyncDecoder::Error\">Error</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"backed_data/entry/formats/trait.AsyncDecoder.html\" title=\"trait backed_data::entry::formats::AsyncDecoder\">AsyncDecoder</a>&lt;&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a> as <a class=\"trait\" href=\"backed_data/entry/disks/trait.AsyncReadDisk.html\" title=\"trait backed_data::entry::disks::AsyncReadDisk\">AsyncReadDisk</a>&gt;::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.AsyncReadDisk.html#associatedtype.ReadDisk\" title=\"type backed_data::entry::disks::AsyncReadDisk::ReadDisk\">ReadDisk</a>, Error: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;, T = Self&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong><code>runtime</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Async version of <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#method.load\" title=\"associated function backed_data::directory::DirectoryBackedArray::load\"><code>Self::load</code></a>.</p>\n</div></details></div></details>",0,"backed_data::directory::StdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#227-251\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deconstruct\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#237-250\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.deconstruct\" class=\"fn\">deconstruct</a>(\n    self,\n) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"backed_data/array/struct.BackedArray.html\" title=\"struct backed_data::array::BackedArray\">BackedArray</a>&lt;K, E&gt;&gt;, impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"backed_data/array/struct.BackedArray.html\" title=\"struct backed_data::array::BackedArray\">BackedArray</a>&lt;K, E&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;)</h4></section></summary><div class=\"docblock\"><p>Splits this into parts, for functions that need <code>Arc&lt;BackedArray&gt;</code>.</p>\n<h5 id=\"return-tuple\"><a class=\"doc-anchor\" href=\"#return-tuple\">§</a>Return Tuple</h5>\n<ul>\n<li>0: This backing array, wrapped in an Arc.</li>\n<li>1: A function that rebuilds <a href=\"backed_data/directory/async_impl/index.html\" title=\"mod backed_data::directory::async_impl\"><code>self</code></a> from the Arc (fails if reference is not unique).</li>\n</ul>\n</div></details></div></details>",0,"backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#227-251\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deconstruct\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#237-250\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.deconstruct\" class=\"fn\">deconstruct</a>(\n    self,\n) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"backed_data/array/struct.BackedArray.html\" title=\"struct backed_data::array::BackedArray\">BackedArray</a>&lt;K, E&gt;&gt;, impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"backed_data/array/struct.BackedArray.html\" title=\"struct backed_data::array::BackedArray\">BackedArray</a>&lt;K, E&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;)</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong><code>runtime</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Splits this into parts, for functions that need <code>Arc&lt;BackedArray&gt;</code>.</p>\n<h5 id=\"return-tuple\"><a class=\"doc-anchor\" href=\"#return-tuple\">§</a>Return Tuple</h5>\n<ul>\n<li>0: This backing array, wrapped in an Arc.</li>\n<li>1: A function that rebuilds <a href=\"backed_data/directory/async_impl/index.html\" title=\"mod backed_data::directory::async_impl\"><code>self</code></a> from the Arc (fails if reference is not unique).</li>\n</ul>\n</div></details></div></details>",0,"backed_data::directory::StdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#38-59\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>&lt;Data = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    E: <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainerNestedAll.html\" title=\"trait backed_data::array::container::BackedEntryContainerNestedAll\">BackedEntryContainerNestedAll</a> + <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.a_remove\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#44-50\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_remove\" class=\"fn\">a_remove</a>(&amp;mut self, entry_idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section><section id=\"method.a_delete\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#52-58\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_delete\" class=\"fn\">a_delete</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></div></details>",0,"backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#38-59\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>&lt;Data = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    E: <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainerNestedAll.html\" title=\"trait backed_data::array::container::BackedEntryContainerNestedAll\">BackedEntryContainerNestedAll</a> + <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.a_remove\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#44-50\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_remove\" class=\"fn\">a_remove</a>(&amp;mut self, entry_idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong><code>runtime</code></strong> only.</div></span><section id=\"method.a_delete\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#52-58\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_delete\" class=\"fn\">a_delete</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong><code>runtime</code></strong> only.</div></span></div></details>",0,"backed_data::directory::StdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#61-89\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>&lt;Data = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    E: <a class=\"trait\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncWrite.html\" title=\"trait backed_data::array::async_impl::BackedEntryContainerNestedAsyncWrite\">BackedEntryContainerNestedAsyncWrite</a> + <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Coder\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Coder\">Coder</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.a_append\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#68-77\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_append\" class=\"fn\">a_append</a>&lt;U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Unwrapped\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Unwrapped\">Unwrapped</a>&gt;&gt;(\n    &amp;mut self,\n    values: U,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncWrite.html#associatedtype.AsyncWriteError\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsyncWrite::AsyncWriteError\">AsyncWriteError</a>&gt;</h4></section><section id=\"method.a_append_memory\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#79-88\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_append_memory\" class=\"fn\">a_append_memory</a>&lt;U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Unwrapped\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Unwrapped\">Unwrapped</a>&gt;&gt;(\n    &amp;mut self,\n    values: U,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncWrite.html#associatedtype.AsyncWriteError\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsyncWrite::AsyncWriteError\">AsyncWriteError</a>&gt;</h4></section></div></details>",0,"backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#61-89\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>&lt;Data = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    E: <a class=\"trait\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncWrite.html\" title=\"trait backed_data::array::async_impl::BackedEntryContainerNestedAsyncWrite\">BackedEntryContainerNestedAsyncWrite</a> + <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Coder\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Coder\">Coder</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.a_append\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#68-77\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_append\" class=\"fn\">a_append</a>&lt;U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Unwrapped\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Unwrapped\">Unwrapped</a>&gt;&gt;(\n    &amp;mut self,\n    values: U,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncWrite.html#associatedtype.AsyncWriteError\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsyncWrite::AsyncWriteError\">AsyncWriteError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong><code>runtime</code></strong> only.</div></span><section id=\"method.a_append_memory\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#79-88\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_append_memory\" class=\"fn\">a_append_memory</a>&lt;U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Unwrapped\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Unwrapped\">Unwrapped</a>&gt;&gt;(\n    &amp;mut self,\n    values: U,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncWrite.html#associatedtype.AsyncWriteError\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsyncWrite::AsyncWriteError\">AsyncWriteError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong><code>runtime</code></strong> only.</div></span></div></details>",0,"backed_data::directory::StdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#91-125\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>&lt;Data = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    E: <a class=\"trait\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncWrite.html\" title=\"trait backed_data::array::async_impl::BackedEntryContainerNestedAsyncWrite\">BackedEntryContainerNestedAsyncWrite</a> + <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.a_append_dir\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#97-124\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_append_dir\" class=\"fn\">a_append_dir</a>(&amp;mut self, rhs: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></div></details>",0,"backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#91-125\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>&lt;Data = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    E: <a class=\"trait\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsyncWrite.html\" title=\"trait backed_data::array::async_impl::BackedEntryContainerNestedAsyncWrite\">BackedEntryContainerNestedAsyncWrite</a> + <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/async_impl/trait.BackedEntryContainerNestedAsync.html#associatedtype.Disk\" title=\"type backed_data::array::async_impl::BackedEntryContainerNestedAsync::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.a_append_dir\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/async_impl.rs.html#97-124\">source</a><h4 class=\"code-header\">pub async fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.a_append_dir\" class=\"fn\">a_append_dir</a>(&amp;mut self, rhs: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong><code>runtime</code></strong> only.</div></span></div></details>",0,"backed_data::directory::StdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#160-175\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#168-174\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.new\" class=\"fn\">new</a>(directory_root: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new directory at <code>directory_root</code>.</p>\n<ul>\n<li><code>directory_root</code>: Valid read/write directory on system</li>\n</ul>\n</div></details></div></details>",0,"backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#177-212\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html\" title=\"trait backed_data::array::container::BackedEntryContainerNested\">BackedEntryContainerNested</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_root\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#185-194\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.update_root\" class=\"fn\">update_root</a>&lt;P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;&gt;(&amp;mut self, new_root: P) -&gt; &amp;mut Self</h4></section></summary><div class=\"docblock\"><p>Updates the root of the directory backed array.</p>\n<p>Does not move any files or directories, just changes the stored root.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_root\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#197-211\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.move_root\" class=\"fn\">move_root</a>(&amp;mut self, new_root: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;&amp;mut Self&gt;</h4></section></summary><div class=\"docblock\"><p>Moves the directory to a new location wholesale.</p>\n</div></details></div></details>",0,"backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#214-221\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.from_existing_array\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#215-220\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.from_existing_array\" class=\"fn\">from_existing_array</a>(\n    array: <a class=\"struct\" href=\"backed_data/array/struct.BackedArray.html\" title=\"struct backed_data::array::BackedArray\">BackedArray</a>&lt;K, E&gt;,\n    directory_root: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>,\n) -&gt; Self</h4></section></div></details>",0,"backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#223-244\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    E: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainerNestedWrite.html\" title=\"trait backed_data::array::container::BackedEntryContainerNestedWrite\">BackedEntryContainerNestedWrite</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.save\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#234-243\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.save\" class=\"fn\">save</a>&lt;C&gt;(&amp;self, coder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, C::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.Encoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::Encoder::Error\">Error</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"backed_data/entry/formats/trait.Encoder.html\" title=\"trait backed_data::entry::formats::Encoder\">Encoder</a>&lt;&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a> as <a class=\"trait\" href=\"backed_data/entry/disks/trait.WriteDisk.html\" title=\"trait backed_data::entry::disks::WriteDisk\">WriteDisk</a>&gt;::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.WriteDisk.html#associatedtype.WriteDisk\" title=\"type backed_data::entry::disks::WriteDisk::WriteDisk\">WriteDisk</a>, Error: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;, T = Self&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Save <a href=\"backed_data/directory/sync_impl/index.html\" title=\"mod backed_data::directory::sync_impl\"><code>self</code></a> at <code>DIRECTORY_ROOT/meta.dat</code>.</p>\n<p>As <a href=\"backed_data/directory/sync_impl/index.html\" title=\"mod backed_data::directory::sync_impl\"><code>self</code></a> implements serialize and deserialize, it does not need to\nbe saved with this method. However, this provides a standard location\nand format for <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#method.load\" title=\"associated function backed_data::directory::DirectoryBackedArray::load\"><code>Self::load</code></a> to utilize.</p>\n</div></details></div></details>",0,"backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#246-265\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: for&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    E: for&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; + <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainerNestedRead.html\" title=\"trait backed_data::array::container::BackedEntryContainerNestedRead\">BackedEntryContainerNestedRead</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#257-264\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.load\" class=\"fn\">load</a>&lt;P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;, C&gt;(root: P, coder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, C::<a class=\"associatedtype\" href=\"backed_data/entry/formats/trait.Decoder.html#associatedtype.Error\" title=\"type backed_data::entry::formats::Decoder::Error\">Error</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"backed_data/entry/formats/trait.Decoder.html\" title=\"trait backed_data::entry::formats::Decoder\">Decoder</a>&lt;&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a> as <a class=\"trait\" href=\"backed_data/entry/disks/trait.ReadDisk.html\" title=\"trait backed_data::entry::disks::ReadDisk\">ReadDisk</a>&gt;::<a class=\"associatedtype\" href=\"backed_data/entry/disks/trait.ReadDisk.html#associatedtype.ReadDisk\" title=\"type backed_data::entry::disks::ReadDisk::ReadDisk\">ReadDisk</a>, Error: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;, T = Self&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load <a href=\"backed_data/directory/sync_impl/index.html\" title=\"mod backed_data::directory::sync_impl\"><code>self</code></a> from <code>DIRECTORY_ROOT/meta.dat</code>.</p>\n<p>As <a href=\"backed_data/directory/sync_impl/index.html\" title=\"mod backed_data::directory::sync_impl\"><code>self</code></a> implements serialize and deserialize, it does not need to\nbe loaded with this method. However, this uses a standard location and\nformat from a <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#method.save\" title=\"method backed_data::directory::DirectoryBackedArray::save\"><code>Self::save</code></a> call.</p>\n</div></details></div></details>",0,"backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#267-275\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html\" title=\"trait backed_data::array::container::BackedEntryContainerNested\">BackedEntryContainerNested</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.next_target\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#272-274\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.next_target\" class=\"fn\">next_target</a>(&amp;self) -&gt; E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a></h4></section></div></details>",0,"backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#28-32\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.get_directory_root\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#29-31\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.get_directory_root\" class=\"fn\">get_directory_root</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a></h4></section></div></details>",0,"backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#34-55\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>&lt;Data = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    E: <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainerNestedAll.html\" title=\"trait backed_data::array::container::BackedEntryContainerNestedAll\">BackedEntryContainerNestedAll</a> + <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#40-46\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.remove\" class=\"fn\">remove</a>(&amp;mut self, entry_idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section><section id=\"method.delete\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#48-54\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.delete\" class=\"fn\">delete</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></div></details>",0,"backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#57-80\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>&lt;Data = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    E: <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainerNestedWrite.html\" title=\"trait backed_data::array::container::BackedEntryContainerNestedWrite\">BackedEntryContainerNestedWrite</a> + <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Coder\" title=\"type backed_data::array::container::BackedEntryContainerNested::Coder\">Coder</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#64-69\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.append\" class=\"fn\">append</a>&lt;U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Unwrapped\" title=\"type backed_data::array::container::BackedEntryContainerNested::Unwrapped\">Unwrapped</a>&gt;&gt;(\n    &amp;mut self,\n    values: U,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNestedWrite.html#associatedtype.WriteError\" title=\"type backed_data::array::container::BackedEntryContainerNestedWrite::WriteError\">WriteError</a>&gt;</h4></section><section id=\"method.append_memory\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#71-79\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.append_memory\" class=\"fn\">append_memory</a>&lt;U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Unwrapped\" title=\"type backed_data::array::container::BackedEntryContainerNested::Unwrapped\">Unwrapped</a>&gt;&gt;(\n    &amp;mut self,\n    values: U,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNestedWrite.html#associatedtype.WriteError\" title=\"type backed_data::array::container::BackedEntryContainerNestedWrite::WriteError\">WriteError</a>&gt;</h4></section></div></details>",0,"backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#82-144\">source</a><a href=\"#impl-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>&lt;Data = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    E: <a class=\"trait\" href=\"backed_data/array/container/trait.BackedEntryContainerNestedWrite.html\" title=\"trait backed_data::array::container::BackedEntryContainerNestedWrite\">BackedEntryContainerNestedWrite</a> + <a class=\"trait\" href=\"backed_data/array/container/trait.ResizingContainer.html\" title=\"trait backed_data::array::container::ResizingContainer\">ResizingContainer</a>,\n    E::<a class=\"associatedtype\" href=\"backed_data/array/container/trait.BackedEntryContainerNested.html#associatedtype.Disk\" title=\"type backed_data::array::container::BackedEntryContainerNested::Disk\">Disk</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_dir\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#92-117\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.append_dir\" class=\"fn\">append_dir</a>(&amp;mut self, rhs: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Append another <a href=\"backed_data/directory/sync_impl/index.html\" title=\"mod backed_data::directory::sync_impl\"><code>self</code></a> of the same type.</p>\n<p>This will move all entries of <code>rhs</code> into <a href=\"backed_data/directory/sync_impl/index.html\" title=\"mod backed_data::directory::sync_impl\"><code>self</code></a>’s root, and clean up the\n<code>rhs</code> directory if empty after move.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_array\" class=\"method\"><a class=\"src rightside\" href=\"src/backed_data/directory/sync_impl.rs.html#122-143\">source</a><h4 class=\"code-header\">pub fn <a href=\"backed_data/directory/struct.DirectoryBackedArray.html#tymethod.append_array\" class=\"fn\">append_array</a>(\n    &amp;mut self,\n    rhs: <a class=\"struct\" href=\"backed_data/array/struct.BackedArray.html\" title=\"struct backed_data::array::BackedArray\">BackedArray</a>&lt;K, E&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Append an existing BackedArray.</p>\n<p>This will move all entries of <code>rhs</code> into <a href=\"backed_data/directory/sync_impl/index.html\" title=\"mod backed_data::directory::sync_impl\"><code>self</code></a>’s root.</p>\n</div></details></div></details>",0,"backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-DirectoryBackedArray%3CK,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/mod.rs.html#27\">source</a><a href=\"#impl-Serialize-for-DirectoryBackedArray%3CK,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"backed_data/directory/struct.DirectoryBackedArray.html\" title=\"struct backed_data::directory::DirectoryBackedArray\">DirectoryBackedArray</a>&lt;K, E&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    E: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/backed_data/directory/mod.rs.html#27\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","backed_data::directory::StdDirBackedArray","backed_data::directory::AsyncStdDirBackedArray","backed_data::directory::ZstdDirBackedArray","backed_data::directory::AsyncZstdDirBackedArray"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()