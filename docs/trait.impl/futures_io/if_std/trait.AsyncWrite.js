(function() {var implementors = {
"backed_data":[["impl AsyncWrite for <a class=\"struct\" href=\"backed_data/entry/adapters/struct.SyncAsAsyncWrite.html\" title=\"struct backed_data::entry::adapters::SyncAsAsyncWrite\">SyncAsAsyncWrite</a>"],["impl AsyncWrite for <a class=\"struct\" href=\"backed_data/utils/struct.AsyncCompatCursor.html\" title=\"struct backed_data::utils::AsyncCompatCursor\">AsyncCompatCursor</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;"],["impl AsyncWrite for <a class=\"struct\" href=\"backed_data/utils/struct.AsyncCompatCursor.html\" title=\"struct backed_data::utils::AsyncCompatCursor\">AsyncCompatCursor</a>&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;"],["impl AsyncWrite for <a class=\"struct\" href=\"backed_data/utils/struct.AsyncCompatCursor.html\" title=\"struct backed_data::utils::AsyncCompatCursor\">AsyncCompatCursor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;"],["impl AsyncWrite for <a class=\"struct\" href=\"backed_data/utils/struct.AsyncCompatCursor.html\" title=\"struct backed_data::utils::AsyncCompatCursor\">AsyncCompatCursor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;"],["impl&lt;'a, B, F, R&gt; AsyncWrite for <a class=\"struct\" href=\"backed_data/entry/disks/encrypted/struct.AsyncEncryptedWriter.html\" title=\"struct backed_data::entry::disks::encrypted::AsyncEncryptedWriter\">AsyncEncryptedWriter</a>&lt;'a, B, F, R&gt;<div class=\"where\">where\n    B: AsyncWrite + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"struct\" href=\"backed_data/entry/disks/encrypted/struct.SecretVecBuffer.html\" title=\"struct backed_data::entry::disks::encrypted::SecretVecBuffer\">SecretVecBuffer</a>&lt;'a&gt;&gt;&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"backed_data/entry/disks/encrypted/struct.EncryptBlocking.html\" title=\"struct backed_data::entry::disks::encrypted::EncryptBlocking\">EncryptBlocking</a>&lt;'_&gt;) -&gt; R,</div>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()